define usinguart1handler

// initialise uart1
define Uart1.Init(divider,rxbuflen,txbuflen) u1rxs:(r8);u1txs:(r8);u1rxe:(r8);u1txe:(r8);u1rxl:(r8);u1txl:(r8);u1rxb:(r8)[rxbuflen];u1txb:(r8)[txbuflen];uart1brr2={(divider and 15)|({divider div 4095} and 15)};uartbrr1={(divider div 16) and 255};call u1init
//u1rxz:(f8) rxbuflen;u1txz:(f8) txbuflen;
//uart1brr2={(divider and 15)|({divider div 4095} and 15)};uartbrr1={(divider div 16) and 255};call u1init
  
// get character from uart to A
define Uart1.get() call u1rxringbufready; a?; if z=0 @1; call u1rxringbuftoa; go @2; @1: a=0; @2:;
  
// send to uart character from A
define Uart1.put() u1txl?; if z=1 @1; call u1txatoringbuf; go @2; @1: call u1txatoringbuf; call u1txringbuftoa; uart1 dr = a; @2:;
  
// test, if rx buffer have character A=1 if not A=0
define Uart1.rxready() call u1rxringbufready
  
// test, if tx buffer not full A=1 if full A=0
define Uart1.txready() call u1txringbufready
  